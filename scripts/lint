#!/usr/bin/env python3
import argparse
import os
from pathlib import Path

from zulint.command import LinterConfig, add_default_linter_arguments

root_dir = Path(__file__).parent.parent


def run() -> None:
    parser = argparse.ArgumentParser()
    add_default_linter_arguments(parser)
    args = parser.parse_args()
    os.chdir(root_dir)
    linter_config = LinterConfig(args)

    linter_config.list_files(
        groups={
            "backend": [
                "bash",
                "json",
                "md",
                "pp",
                "py",
                "pyi",
                "sh",
                "text",
                "txt",
                "yaml",
                "yml",
            ],
            "frontend": [
                "css",
                "flow",
                "hbs",
                "html",
                "js",
                "lock",
                "ts",
            ],
        },
    )
    linter_config.external_linter(
        "eslint",
        [
            "frontend/node_modules/.bin/eslint",
            "--config",
            "frontend/package.json",
            "--cache",
            "--ext",
            ".js,.ts",
        ],
        ["js", "ts"],
        fix_arg="--fix",
        description="Standard JavaScript style and formatting linter (config: .eslintrc).",
    )
    linter_config.external_linter(
        "prettier",
        [
            "frontend/node_modules/.bin/prettier",
            "--config",
            "frontend/package.json",
            "--cache",
            "--check",
            "--log-level=warn",
        ],
        ["css", "flow", "js", "json", "md", "ts", "yaml", "yml"],
        fix_arg=["--write"],
        description="Formats CSS, JavaScript, YAML",
    )
    linter_config.do_lint()


if __name__ == "__main__":
    run()
